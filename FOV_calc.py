fov = {
    10 : {
        1 : (121.9, 100.4, 130.4),
        2 : (99.0, 75.9, 109.2),
        3 : (66.8, 47.5, 76.8)
    },
    11 : {
        1 : (117.1, 95.0, 126.1),
        2 : (93.5, 70.7, 103.9),
        3 : (61.9, 43.6, 71.6)
    },
    12 : {
        1 : (112.6, 90.0, 122.0),
        2 : (88.5, 66.0, 99.0),
        3 : (57.6, 40.3, 66.9)
    },
    14 : {
        1 : (104.3, 81.2, 114.2),
        2 : (79.8, 58.2, 90.3),
        3 : (50.5, 34.9, 59.1)
    },
    15 : {
        1 : (100.4, 77.3, 110.5),
        2 : (75.9, 54.9, 86.3),
        3 : (47.5, 32.7, 55.7)
    },
    17 : {
        1 : (93.3, 70.4, 103.7),
        2 : (69.1, 49.3, 79.2),
        3 : (42.4, 29.0, 50.0)
    },
    18 : {
        1 : (90.0, 67.4, 100.5),
        2 : (66.0, 46.9, 76.0),
        3 : (40.3, 27.5, 47.6)
    },
    19 : {
        1 : (86.9, 64.6, 97.4),
        2 : (63.2, 44.6, 73.0),
        3 : (38.3, 26.1, 45.3)
    },
    20 : {
        1 : (84.0, 61.9, 94.5),
        2 : (60.7, 42.6, 70.2),
        3 : (36.5, 24.8, 43.3)
    },
    24 : {
        1 : (73.7, 53.1, 84.1),
        2 : (52.0, 36.0, 60.7),
        3 : (30.8, 20.8, 36.6)
    },
    28 : {
        1 : (65.5, 46.4, 75.4),
        2 : (45.4, 31.1, 53.3),
        3 : (26.5, 17.9, 31.6)
    },
    30 : {
        1 : (61.9, 43.6, 71.6),
        2 : (42.6, 29.1, 50.2),
        3 : (24.8, 16.7, 29.6)
    },
    35 : {
        1 : (54.4, 37.8, 63.4),
        2 : (37.0, 25.1, 43.8),
        3 : (21.4, 14.3, 25.5)
    },
    45 : {
        1 : (43.6, 29.9, 51.4),
        2 : (29.1, 19.7, 34.7),
        3 : (16.7, 11.2, 20.0)
    },
    50 : {
        1 : (39.6, 27.0, 46.8),
        2 : (26.3, 17.7, 31.4),
        3 : (15.0, 10.1, 18.0)
    },
    55 : {
        1 : (36.2, 24.6, 42.9),
        2 : (24.0, 16.1, 28.7),
        3 : (13.7, 9.1, 16.4)
    },
    60 : {
        1 : (33.4, 22.6, 39.7),
        2 : (22.1, 14.8, 26.4),
        3 : (12.6, 8.4, 15.1)
    },
    70 : {
        1 : (28.8, 19.5, 34.3),
        2 : (19.0, 12.7, 22.7),
        3 : (10.8, 7.2, 12.9)
    },
    75 : {
        1 : (27.0, 18.2, 32.2),
        2 : (17.7, 11.9, 21.2),
        3 : (10.1, 6.7, 12.1)
    },
    80 : {
        1 : (25.4, 17.1, 30.3),
        2 : (16.6, 11.1, 19.9),
        3 : (9.4, 6.3, 11.3)
    },
    85 : {
        1 : (23.9, 16.1, 28.6),
        2 : (15.7, 10.5, 18.8),
        3 : (8.9, 5.9, 10.7)
    },
    90 : {
        1 : (22.6, 15.2, 27.0),
        2 : (14.8, 9.9, 17.8),
        3 : (8.4, 5.6, 10.1)
    },
    100 : {
        1 : (20.4, 13.7, 24.4),
        2 : (13.3, 8.9, 16.0),
        3 : (7.6, 5.0, 9.1)
    },
    105 : {
        1 : (19.5, 13.0, 23.3),
        2 : (12.7, 8.5, 15.3),
        3 : (7.2, 4.8, 8.6)
    },
    120 : {
        1 : (17.1, 11.4, 20.4),
        2 : (11.1, 7.4, 13.4),
        3 : (6.3, 4.2, 7.6)
    },
    125 : {
        1 : (16.4, 11.0, 19.6),
        2 : (10.7, 7.1, 12.8),
        3 : (6.0, 4.0, 7.3)
    },
    135 : {
        1 : (15.2, 10.2, 18.2),
        2 : (9.9, 6.6, 11.9),
        3 : (5.6, 3.7, 6.7)
    },
    150 : {
        1 : (13.7, 9.1, 16.4),
        2 : (8.9, 6.0, 10.7),
        3 : (5.0, 3.4, 6.1)
    },
    170 : {
        1 : (12.1, 8.1, 14.5),
        2 : (7.9, 5.3, 9.5),
        3 : (4.4, 3.0, 5.3)
    }
}

def get_fov(lens_focal_length : int, format : int) -> tuple:
    """Get the FOV of the camera
    
        lens_focal_length - Lens Focal Length measured in mm (millimeters). For example 24mm
        format - 1: 35mm & FX
                 2: DX
                 3: CX Nikon 1"""
    try:
        return fov[lens_focal_length][format]
    except:
        return None